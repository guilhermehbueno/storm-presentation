<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.storm.presentation</groupId>
	<artifactId>storm-presentation</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>storm-presentation</name>
	<url>http://maven.apache.org</url>

	<!-- mvn clean install -P storm-deploy -Dstorm.environment=dev -->
	<properties>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<build.date>${maven.build.timestamp}</build.date>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<storm.deploy.area>/opt/storm-presentation</storm.deploy.area>
		<java.version>1.8</java.version>
		<kafka.version>0.8.1</kafka.version>
		<storm.version>0.9.5</storm.version>
		<!-- <topology>br.com.dojo.storm.topology.StormDojoTopology</topology> -->
		<topology>br.com.dojo.storm.trident.topology.SimpleTridentTopology</topology>
		<storm.environment>local</storm.environment>
	</properties>

	<repositories>
		<repository>
			<id>github-releases</id>
			<url>http://oss.sonatype.org/content/repositories/github-releases/</url>
		</repository>
		<repository>
			<id>clojars.org</id>
			<url>http://clojars.org/repo</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>3.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>com.rabbitmq</groupId>
			<artifactId>amqp-client</artifactId>
			<version>3.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert-core</artifactId>
			<version>2.0M8</version>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>org.apache.storm</groupId> <artifactId>storm-core</artifactId> 
			<version>${storm.version}</version> <scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>org.apache.storm</groupId>
			<artifactId>storm-core</artifactId>
			<version>0.9.2-incubating</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.10</artifactId>
			<version>${kafka.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jms</artifactId>
					<groupId>javax.jms</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jmxtools</artifactId>
					<groupId>com.sun.jdmk</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jmxri</artifactId>
					<groupId>com.sun.jmx</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jopt-simple</groupId>
			<artifactId>jopt-simple</artifactId>
			<version>4.9</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.5.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.4.1</version>
				</plugin>
				<plugin>
					<groupId>com.theoryinpractise</groupId>
					<artifactId>clojure-maven-plugin</artifactId>
					<version>1.3.18</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.16</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.3</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.2.1,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>${topology}</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>java</executable>
					<includeProjectDependencies>true</includeProjectDependencies>
					<includePluginDependencies>false</includePluginDependencies>
					<classpathScope>compile</classpathScope>
					<mainClass>${topology}</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<tagNameFormat>v@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>storm-deploy</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<filters>
					<filter>profiles/${storm.environment}/config.properties</filter>
				</filters>
				<resources>
					<resource>
						<directory>deploy</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<!-- copy resources -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-storm-deploy-files</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${storm.deploy.area}</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/target/classes/</directory>
											<filtering>false</filtering>
											<includes>
												<include>heimdall.properties</include>
												<include>storm.properties</include>
												<include>deploy_topology.sh</include>
											</includes>
										</resource>
										<resource>
											<directory>${basedir}/target</directory>
											<filtering>false</filtering>
											<includes>
												<include>*-jar-with-dependencies.jar</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- copy resources -->
					<!-- Execute deploy -->
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>copy-storm.yaml</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${basedir}/target/classes/build-storm.yaml"
											tofile="/opt/storm/conf/storm.yaml" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>Permissions</id>
								<phase>package</phase>
								<configuration>
									<target>
										<chmod file="${storm.deploy.area}/deploy_topology.sh"
											perm="777" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>execute_deploy_to_storm</id>
								<phase>package</phase>
								<configuration>
									<target>
										<exec executable="${storm.deploy.area}/deploy_topology.sh"
											dir="${storm.deploy.area}/" failonerror="true">
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Execute deploy -->
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dev</id>
			<build>
				<filters>
					<filter>profiles/dev/config.properties</filter>
				</filters>
				<resources>
					<resource>
						<directory>deploy</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>rpm-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>rpm</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<copyright>2010, NoBody</copyright>
							<group>Development</group>
							<description>Maven Recipe: RPM Package.</description>
							<mappings>
								<mapping>
									<directory>/opt/search-heimdall</directory>
									<sources>
										<source>
											<location>target/${project.artifactId}-${project.version}-jar-with-dependencies.jar</location>
										</source>
										<source>
											<location>target/classes/storm.properties</location>
										</source>
										<source>
											<location>target/classes/heimdall.properties</location>
										</source>
									</sources>
								</mapping>
								<mapping>
									<directory>${storm.deploy.area}</directory>
									<filemode>777</filemode>
									<sources>
										<source>
											<location>target/classes/deploy_topology.sh</location>
										</source>
									</sources>
								</mapping>
							</mappings>
							<postinstallScriptlet>
								<script>
									${storm.deploy.area}/./deploy_topology.sh;
								</script>
							</postinstallScriptlet>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>qa</id>
			<build>
				<filters>
					<filter>profiles/qa/config.properties</filter>
				</filters>
				<resources>
					<resource>
						<directory>deploy</directory>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>rpm-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>rpm</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<copyright>2010, NoBody</copyright>
							<group>Development</group>
							<description>Maven Recipe: RPM Package.</description>
							<mappings>
								<mapping>
									<directory>${storm.deploy.area}</directory>
									<sources>
										<source>
											<location>target/${project.artifactId}-${project.version}-jar-with-dependencies.jar</location>
										</source>
										<source>
											<location>target/classes/storm.properties</location>
										</source>
										<source>
											<location>target/classes/heimdall.properties</location>
										</source>

									</sources>
								</mapping>
								<mapping>
									<directory>${storm.deploy.area}</directory>
									<filemode>777</filemode>
									<sources>
										<source>
											<location>target/classes/deploy_topology.sh</location>
										</source>
									</sources>
								</mapping>
							</mappings>
							<postinstallScriptlet>
								<!-- Desativado para prod <script> ${storm.deploy.area}/./deploy_topology.sh; 
									</script> -->
							</postinstallScriptlet>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
